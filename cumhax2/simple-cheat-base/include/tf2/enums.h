#pragma once

enum playercontrols
{
	IN_ATTACK = (1 << 0),
	IN_JUMP = (1 << 1),
	IN_DUCK = (1 << 2),
	IN_FORWARD = (1 << 3),
	IN_BACK = (1 << 4),
	IN_USE = (1 << 5),
	IN_CANCEL = (1 << 6),
	IN_LEFT = (1 << 7),
	IN_RIGHT = (1 << 8),
	IN_MOVELEFT = (1 << 9),
	IN_MOVERIGHT = (1 << 10),
	IN_ATTACK2 = (1 << 11),
	IN_RUN = (1 << 12),
	IN_RELOAD = (1 << 13),
	IN_ALT1 = (1 << 14),
	IN_ALT2 = (1 << 15),
	IN_SCORE = (1 << 16),	// Used by client.dll for when scoreboard is held down
	IN_SPEED = (1 << 17),	// Player is holding the speed key
	IN_WALK = (1 << 18),	// Player holding walk key
	IN_ZOOM = (1 << 19),	// Zoom key for HUD zoom
	IN_WEAPON1 = (1 << 20),	// weapon defines these bits
	IN_WEAPON2 = (1 << 21),	// weapon defines these bits
	IN_BULLRUSH = (1 << 22),
};

typedef enum
{
	MATERIAL_VAR_DEBUG = (1 << 0),
	MATERIAL_VAR_NO_DEBUG_OVERRIDE = (1 << 1),
	MATERIAL_VAR_NO_DRAW = (1 << 2),
	MATERIAL_VAR_USE_IN_FILLRATE_MODE = (1 << 3),
	MATERIAL_VAR_VERTEXCOLOR = (1 << 4),
	MATERIAL_VAR_VERTEXALPHA = (1 << 5),
	MATERIAL_VAR_SELFILLUM = (1 << 6),
	MATERIAL_VAR_ADDITIVE = (1 << 7),
	MATERIAL_VAR_ALPHATEST = (1 << 8),
	MATERIAL_VAR_ZNEARER = (1 << 10),
	MATERIAL_VAR_MODEL = (1 << 11),
	MATERIAL_VAR_FLAT = (1 << 12),
	MATERIAL_VAR_NOCULL = (1 << 13),
	MATERIAL_VAR_NOFOG = (1 << 14),
	MATERIAL_VAR_IGNOREZ = (1 << 15),
	MATERIAL_VAR_DECAL = (1 << 16),
	MATERIAL_VAR_ENVMAPSPHERE = (1 << 17), // OBSOLETE
	MATERIAL_VAR_ENVMAPCAMERASPACE = (1 << 19), // OBSOLETE
	MATERIAL_VAR_BASEALPHAENVMAPMASK = (1 << 20),
	MATERIAL_VAR_TRANSLUCENT = (1 << 21),
	MATERIAL_VAR_NORMALMAPALPHAENVMAPMASK = (1 << 22),
	MATERIAL_VAR_NEEDS_SOFTWARE_SKINNING = (1 << 23), // OBSOLETE
	MATERIAL_VAR_OPAQUETEXTURE = (1 << 24),
	MATERIAL_VAR_ENVMAPMODE = (1 << 25), // OBSOLETE
	MATERIAL_VAR_SUPPRESS_DECALS = (1 << 26),
	MATERIAL_VAR_HALFLAMBERT = (1 << 27),
	MATERIAL_VAR_WIREFRAME = (1 << 28),
	MATERIAL_VAR_ALLOWALPHATOCOVERAGE = (1 << 29),
	MATERIAL_VAR_ALPHA_MODIFIED_BY_PROXY = (1 << 30),
	MATERIAL_VAR_VERTEXFOG = (1 << 31),
} MaterialVarFlags_t;

typedef enum
{
	OVERRIDE_NORMAL = 0,
	OVERRIDE_BUILD_SHADOWS,
	OVERRIDE_DEPTH_WRITE,
	OVERRIDE_SSAO_DEPTH_WRITE,
}  OverrideType_t;

typedef enum
{
	CTFWearableRazorback = 341,
	CTFWearableDemoShield = 338,
	CTFWearableLevelableItem = 340,
	CTFWearableCampaignItem = 337,
	CTFBaseRocket = 185,
	CTFWeaponBaseMerasmusGrenade = 325,
	CTFWeaponBaseMelee = 324,
	CTFWeaponBaseGun = 323,
	CTFWeaponBaseGrenadeProj = 322,
	CTFWeaponBase = 321,
	CTFWearableRobotArm = 342,
	CTFRobotArm = 287,
	CTFWrench = 344,
	CTFProjectile_ThrowableBreadMonster = 279,
	CTFProjectile_ThrowableBrick = 280,
	CTFProjectile_ThrowableRepel = 281,
	CTFProjectile_Throwable = 278,
	CTFThrowable = 319,
	CTFSyringeGun = 315,
	CTFKatana = 225,
	CTFSword = 314,
	CSniperDot = 118,
	CTFSniperRifleClassic = 308,
	CTFSniperRifleDecap = 309,
	CTFSniperRifle = 307,
	CTFChargedSMG = 197,
	CTFSMG = 306,
	CTFSlap = 305,
	CTFShovel = 304,
	CTFShotgunBuildingRescue = 303,
	CTFPEPBrawlerBlaster = 241,
	CTFSodaPopper = 310,
	CTFShotgun_Revenge = 301,
	CTFScatterGun = 297,
	CTFShotgun_Pyro = 300,
	CTFShotgun_HWG = 299,
	CTFShotgun_Soldier = 302,
	CTFShotgun = 298,
	CTFRocketPack = 296,
	CTFCrossbow = 201,
	CTFRocketLauncher_Mortar = 295,
	CTFRocketLauncher_AirStrike = 293,
	CTFRocketLauncher_DirectHit = 294,
	CTFRocketLauncher = 292,
	CTFRevolver = 286,
	CTFDRGPomson = 202,
	CTFRaygun = 284,
	CTFPistol_ScoutSecondary = 246,
	CTFPistol_ScoutPrimary = 245,
	CTFPistol_Scout = 244,
	CTFPistol = 243,
	CTFPipebombLauncher = 242,
	CTFWeaponPDA_Spy = 332,
	CTFWeaponPDA_Engineer_Destroy = 331,
	CTFWeaponPDA_Engineer_Build = 330,
	CTFWeaponPDAExpansion_Teleporter = 334,
	CTFWeaponPDAExpansion_Dispenser = 333,
	CTFWeaponPDA = 329,
	CTFParticleCannon = 239,
	CTFParachute_Secondary = 238,
	CTFParachute_Primary = 237,
	CTFParachute = 236,
	CTFMinigun = 234,
	CTFMedigunShield = 231,
	CWeaponMedigun = 352,
	CTFProjectile_MechanicalArmOrb = 263,
	CTFMechanicalArm = 230,
	CTFLunchBox_Drink = 229,
	CTFLunchBox = 228,
	CLaserDot = 78,
	CTFLaserPointer = 227,
	CTFKnife = 226,
	CTFGasManager = 212,
	CTFProjectile_JarGas = 261,
	CTFJarGas = 223,
	CTFProjectile_Cleaver = 254,
	CTFProjectile_JarMilk = 262,
	CTFProjectile_Jar = 260,
	CTFCleaver = 198,
	CTFJarMilk = 224,
	CTFJar = 222,
	CTFWeaponInvis = 328,
	CTFCannon = 196,
	CTFGrenadeLauncher = 216,
	CTFGrenadePipebombProjectile = 217,
	CTFGrapplingHook = 215,
	CTFFlareGun_Revenge = 210,
	CTFFlareGun = 209,
	CTFFlameRocket = 207,
	CTFFlameThrower = 208,
	CTFFists = 205,
	CTFFireAxe = 204,
	CTFWeaponFlameBall = 327,
	CTFCompoundBow = 200,
	CTFClub = 199,
	CTFBuffItem = 195,
	CTFStickBomb = 312,
	CTFBreakableSign = 194,
	CTFBottle = 192,
	CTFBreakableMelee = 193,
	CTFBonesaw = 190,
	CTFBall_Ornament = 182,
	CTFStunBall = 313,
	CTFBat_Giftwrap = 188,
	CTFBat_Wood = 189,
	CTFBat_Fish = 187,
	CTFBat = 186,
	CTFProjectile_EnergyRing = 256,
	CTFDroppedWeapon = 203,
	CTFWeaponSapper = 335,
	CTFWeaponBuilder = 326,
	C_TFWeaponBuilder = 0,
	CTFProjectile_Rocket = 264,
	CTFProjectile_Flare = 257,
	CTFProjectile_EnergyBall = 255,
	CTFProjectile_GrapplingHook = 258,
	CTFProjectile_HealingBolt = 259,
	CTFProjectile_Arrow = 252,
	CMannVsMachineStats = 80,
	CTFTankBoss = 316,
	CTFBaseBoss = 183,
	CBossAlpha = 0,
	NextBotCombatCharacter = 357,
	CTFProjectile_SpellKartBats = 268,
	CTFProjectile_SpellKartOrb = 269,
	CTFHellZap = 220,
	CTFProjectile_SpellLightningOrb = 270,
	CTFProjectile_SpellTransposeTeleport = 277,
	CTFProjectile_SpellMeteorShower = 271,
	CTFProjectile_SpellSpawnBoss = 274,
	CTFProjectile_SpellMirv = 272,
	CTFProjectile_SpellPumpkin = 273,
	CTFProjectile_SpellSpawnHorde = 275,
	CTFProjectile_SpellSpawnZombie = 276,
	CTFProjectile_SpellBats = 266,
	CTFProjectile_SpellFireball = 267,
	CTFSpellBook = 311,
	CHightower_TeleportVortex = 74,
	CTeleportVortex = 160,
	CZombie = 354,
	CMerasmusDancer = 83,
	CMerasmus = 82,
	CHeadlessHatman = 73,
	CEyeballBoss = 48,
	CTFBotHintEngineerNest = 191,
	CBotNPCMinion = 0,
	CBotNPC = 0,
	CPasstimeGun = 94,
	CTFViewModel = 320,
	CRobotDispenser = 112,
	CTFRobotDestruction_Robot = 288,
	CTFReviveMarker = 285,
	CTFPumpkinBomb = 282,
	CTFProjectile_BallOfFire = 253,
	CTFBaseProjectile = 184,
	CTFPointManager = 250,
	CBaseObjectUpgrade = 11,
	CTFRobotDestructionLogic = 291,
	CTFRobotDestruction_RobotGroup = 289,
	CTFRobotDestruction_RobotSpawn = 290,
	CTFPlayerDestructionLogic = 248,
	CPlayerDestructionDispenser = 101,
	CTFMinigameLogic = 233,
	CTFHalloweenMinigame_FallingPlatforms = 219,
	CTFHalloweenMinigame = 218,
	CTFMiniGame = 232,
	CTFPowerupBottle = 251,
	CTFItem = 221,
	CHalloweenSoulPack = 71,
	CTFGenericBomb = 213,
	CBonusRoundLogic = 23,
	CTFGameRulesProxy = 211,
	CTETFParticleEffect = 179,
	CTETFExplosion = 178,
	CTETFBlood = 177,
	CTFFlameManager = 206,
	CHalloweenGiftPickup = 69,
	CBonusDuckPickup = 21,
	CHalloweenPickup = 70,
	CCaptureFlagReturnIcon = 27,
	CCaptureFlag = 26,
	CBonusPack = 22,
	CTFTeam = 318,
	CTFTauntProp = 317,
	CTFPlayerResource = 249,
	CTFPlayer = 247,
	CTFRagdoll = 283,
	CTEPlayerAnimEvent = 165,
	CTFPasstimeLogic = 240,
	CPasstimeBall = 93,
	CTFObjectiveResource = 235,
	CTFGlow = 214,
	CTEFireBullets = 152,
	CTFBuffBanner = 0,
	CTFAmmoPack = 181,
	CObjectTeleporter = 89,
	CObjectSentrygun = 88,
	CTFProjectile_SentryRocket = 265,
	CObjectSapper = 87,
	CObjectCartDispenser = 85,
	CObjectDispenser = 86,
	CMonsterResource = 84,
	CFuncRespawnRoomVisualizer = 64,
	CFuncRespawnRoom = 63,
	CFuncPasstimeGoal = 61,
	CFuncForceField = 57,
	CCaptureZone = 28,
	CCurrencyPack = 31,
	CBaseObject = 10,
	CTestTraceline = 176,
	CTEWorldDecal = 180,
	CTESpriteSpray = 174,
	CTESprite = 173,
	CTESparks = 172,
	CTESmoke = 171,
	CTEShowLine = 169,
	CTEProjectedDecal = 167,
	CTEPlayerDecal = 166,
	CTEPhysicsProp = 164,
	CTEParticleSystem = 163,
	CTEMuzzleFlash = 162,
	CTELargeFunnel = 159,
	CTEKillPlayerAttachments = 158,
	CTEImpact = 157,
	CTEGlowSprite = 156,
	CTEShatterSurface = 168,
	CTEFootprintDecal = 154,
	CTEFizz = 153,
	CTEExplosion = 151,
	CTEEnergySplash = 150,
	CTEEffectDispatch = 149,
	CTEDynamicLight = 148,
	CTEDecal = 146,
	CTEClientProjectile = 145,
	CTEBubbleTrail = 144,
	CTEBubbles = 143,
	CTEBSPDecal = 142,
	CTEBreakModel = 141,
	CTEBloodStream = 140,
	CTEBloodSprite = 139,
	CTEBeamSpline = 138,
	CTEBeamRingPoint = 137,
	CTEBeamRing = 136,
	CTEBeamPoints = 135,
	CTEBeamLaser = 134,
	CTEBeamFollow = 133,
	CTEBeamEnts = 132,
	CTEBeamEntPoint = 131,
	CTEBaseBeam = 130,
	CTEArmorRicochet = 129,
	CTEMetalSparks = 161,
	CSteamJet = 123,
	CSmokeStack = 117,
	DustTrail = 355,
	CFireTrail = 50,
	SporeTrail = 362,
	SporeExplosion = 361,
	RocketTrail = 359,
	SmokeTrail = 360,
	CPropVehicleDriveable = 108,
	ParticleSmokeGrenade = 358,
	CParticleFire = 90,
	MovieExplosion = 356,
	CTEGaussExplosion = 155,
	CEnvQuadraticBeam = 43,
	CEmbers = 36,
	CEnvWind = 47,
	CPrecipitation = 107,
	CBaseTempEntity = 17,
	CWeaponIFMSteadyCam = 351,
	CWeaponIFMBaseCamera = 350,
	CWeaponIFMBase = 349,
	CTFWearableVM = 343,
	CTFWearable = 336,
	CTFWearableItem = 339,
	CEconWearable = 35,
	CBaseAttributableItem = 3,
	CEconEntity = 34,
	CHandleTest = 72,
	CTeamplayRoundBasedRulesProxy = 126,
	CTeamRoundTimer = 127,
	CSpriteTrail = 122,
	CSpriteOriented = 121,
	CSprite = 120,
	CRagdollPropAttached = 111,
	CRagdollProp = 110,
	CPoseController = 106,
	CGameRulesProxy = 68,
	CInfoLadderDismount = 75,
	CFuncLadder = 58,
	CEnvDetailController = 40,
	CWorld = 353,
	CWaterLODControl = 348,
	CWaterBullet = 347,
	CVoteController = 346,
	CVGuiScreen = 345,
	CPropJeep = 0,
	CPropVehicleChoreoGeneric = 0,
	CTest_ProxyToggle_Networkable = 175,
	CTesla = 170,
	CTeamTrainWatcher = 128,
	CBaseTeamObjectiveResource = 16,
	CTeam = 125,
	CSun = 124,
	CParticlePerformanceMonitor = 91,
	CSpotlightEnd = 119,
	CSlideshowDisplay = 116,
	CShadowControl = 115,
	CSceneEntity = 114,
	CRopeKeyframe = 113,
	CRagdollManager = 109,
	CPhysicsPropMultiplayer = 98,
	CPhysBoxMultiplayer = 96,
	CBasePropDoor = 15,
	CDynamicProp = 33,
	CPointWorldText = 105,
	CPointCommentaryNode = 104,
	CPointCamera = 103,
	CPlayerResource = 102,
	CPlasma = 100,
	CPhysMagnet = 99,
	CPhysicsProp = 97,
	CPhysBox = 95,
	CParticleSystem = 92,
	CMaterialModifyControl = 81,
	CLightGlow = 79,
	CInfoOverlayAccessor = 77,
	CFuncTrackTrain = 67,
	CFuncSmokeVolume = 66,
	CFuncRotating = 65,
	CFuncReflectiveGlass = 62,
	CFuncOccluder = 60,
	CFuncMonitor = 59,
	CFunc_LOD = 54,
	CTEDust = 147,
	CFunc_Dust = 53,
	CFuncConveyor = 56,
	CBreakableSurface = 25,
	CFuncAreaPortalWindow = 55,
	CFish = 51,
	CEntityFlame = 38,
	CFireSmoke = 49,
	CEnvTonemapController = 46,
	CEnvScreenEffect = 44,
	CEnvScreenOverlay = 45,
	CEnvProjectedTexture = 42,
	CEnvParticleScript = 41,
	CFogController = 52,
	CEntityParticleTrail = 39,
	CEntityDissolve = 37,
	CDynamicLight = 32,
	CColorCorrectionVolume = 30,
	CColorCorrection = 29,
	CBreakableProp = 24,
	CBasePlayer = 13,
	CBaseFlex = 8,
	CBaseEntity = 7,
	CBaseDoor = 6,
	CBaseCombatCharacter = 4,
	CBaseAnimatingOverlay = 2,
	CBoneFollower = 20,
	CBaseAnimating = 1,
	CInfoLightingRelative = 76,
	CAI_BaseNPC = 0,
	CBeam = 19,
	CBaseViewModel = 18,
	CBaseProjectile = 14,
	CBaseParticleEntity = 12,
	CBaseGrenade = 9,
	CBaseCombatWeapon = 5,
} ent_id;

enum TFConds
{
	TFCond_Slowed = (1 << 0),
	TFCond_Zoomed = (1 << 1),
	TFCond_Disguising = (1 << 2),
	TFCond_Disguised = (1 << 3),
	TFCond_Cloaked = (1 << 4),
	TFCond_Ubercharged = (1 << 5),
	TFCond_TeleportedGlow = (1 << 6),
	TFCond_Taunting = (1 << 7),
	TFCond_UberchargeFading = (1 << 8),
	TFCond_CloakFlicker = (1 << 9),
	TFCond_Teleporting = (1 << 10),
	TFCond_Kritzkrieged = (1 << 11),
	TFCond_TmpDamageBonus = (1 << 12),
	TFCond_DeadRingered = (1 << 13),
	TFCond_Bonked = (1 << 14),
	TFCond_Stunned = (1 << 15),
	TFCond_Buffed = (1 << 16),
	TFCond_Charging = (1 << 17),
	TFCond_DemoBuff = (1 << 18),
	TFCond_CritCola = (1 << 19),
	TFCond_InHealRadius = (1 << 20),
	TFCond_Healing = (1 << 21),
	TFCond_OnFire = (1 << 22),
	TFCond_Overhealed = (1 << 23),
	TFCond_Jarated = (1 << 24),
	TFCond_Bleeding = (1 << 25),
	TFCond_DefenseBuffed = (1 << 26),
	TFCond_Milked = (1 << 27),
	TFCond_MegaHeal = (1 << 28),
	TFCond_RegenBuffed = (1 << 29),
	TFCond_MarkedForDeath = (1 << 30),
	TFCond_NoHealingDamageBuff = (1 << 31),

	TFCondEx_SpeedBuffAlly = (1 << 0),
	TFCondEx_HalloweenCritCandy = (1 << 1),
	TFCondEx_CritCanteen = (1 << 2),
	TFCondEx_CritDemoCharge = (1 << 3),
	TFCondEx_CritHype = (1 << 4),
	TFCondEx_CritOnFirstBlood = (1 << 5),
	TFCondEx_CritOnWin = (1 << 6),
	TFCondEx_CritOnFlagCapture = (1 << 7),
	TFCondEx_CritOnKill = (1 << 8),
	TFCondEx_RestrictToMelee = (1 << 9),
	TFCondEx_DefenseBuffNoCritBlock = (1 << 10),
	TFCondEx_Reprogrammed = (1 << 11),
	TFCondEx_PyroCrits = (1 << 12),
	TFCondEx_PyroHeal = (1 << 13),
	TFCondEx_FocusBuff = (1 << 14),
	TFCondEx_DisguisedRemoved = (1 << 15),
	TFCondEx_MarkedForDeathSilent = (1 << 16),
	TFCondEx_DisguisedAsDispenser = (1 << 17),
	TFCondEx_InKart = (1 << 18),
	TFCondEx_UberchargedHidden = (1 << 19),
	TFCondEx_UberchargedCanteen = (1 << 20),
	TFCondEx_HalloweenBombHead = (1 << 21),
	TFCondEx_HalloweenThriller = (1 << 22),
	TFCondEx_BulletCharge = (1 << 26),
	TFCondEx_ExplosiveCharge = (1 << 27),
	TFCondEx_FireCharge = (1 << 28),
	TFCondEx_BulletResistance = (1 << 29),
	TFCondEx_ExplosiveResistance = (1 << 30),
	TFCondEx_FireResistance = (1 << 31),
	TFCondEx_PhlogUber = 1052672,

	TFCondEx2_Stealthed = (1 << 0),
	TFCondEx2_MedigunDebuff = (1 << 1),
	TFCondEx2_StealthedUserBuffFade = (1 << 2),
	TFCondEx2_BulletImmune = (1 << 3),
	TFCondEx2_BlastImmune = (1 << 4),
	TFCondEx2_FireImmune = (1 << 5),
	TFCondEx2_PreventDeath = (1 << 6),
	TFCondEx2_MVMBotRadiowave = (1 << 7),
	TFCondEx2_HalloweenSpeedBoost = (1 << 8),
	TFCondEx2_HalloweenQuickHeal = (1 << 9),
	TFCondEx2_HalloweenGiant = (1 << 10),
	TFCondEx2_HalloweenTiny = (1 << 11),
	TFCondEx2_HalloweenInHell = (1 << 12),
	TFCondEx2_HalloweenGhostMode = (1 << 13),
	TFCondEx2_Parachute = (1 << 16),
	TFCondEx2_BlastJumping = (1 << 17),

	TFCond_MiniCrits = (TFCond_Buffed | TFCond_CritCola),
	TFCond_IgnoreStates = (TFCond_Ubercharged | TFCond_Bonked),
	TFCondEx_IgnoreStates = (TFCondEx_PyroHeal)
} TFConds;

typedef enum
{
	DPT_Int = 0,
	DPT_Float,
	DPT_Vector,
	DPT_VectorXY,
	DPT_String,
	DPT_Array,	// An array of the base types (can't be of datatables).
	DPT_DataTable,
#if 0 // We can't ship this since it changes the size of DTVariant to be 20 bytes instead of 16 and that breaks MODs!!!
	DPT_Quaternion,
#endif
	DPT_NUMSendPropTypes
} SendPropType;

#pragma region PLAYER_FLAGS
// PLAYER SPECIFIC FLAGS FIRST BECAUSE WE USE ONLY A FEW BITS OF NETWORK PRECISION
#define	FL_ONGROUND				(1<<0)	// At rest / on the ground
#define FL_DUCKING				(1<<1)	// Player flag -- Player is fully crouched
#define	FL_WATERJUMP			(1<<2)	// player jumping out of water
#define FL_ONTRAIN				(1<<3) // Player is _controlling_ a train, so movement commands should be ignored on client during prediction.
#define FL_INRAIN				(1<<4)	// Indicates the entity is standing in rain
#define FL_FROZEN				(1<<5) // Player is frozen for 3rd person camera
#define FL_ATCONTROLS			(1<<6) // Player can't move, but keeps key inputs for controlling another entity
#define	FL_CLIENT				(1<<7)	// Is a player
#define FL_FAKECLIENT			(1<<8)	// Fake client, simulated server side; don't send network messages to them

// NOTE if you move things up, make sure to change this value
#define PLAYER_FLAG_BITS		9

// NON-PLAYER SPECIFIC (i.e., not used by GameMovement or the client .dll ) -- Can still be applied to players, though
#define	FL_INWATER				(1<<9)	// In water
#define	FL_FLY					(1<<10)	// Changes the SV_Movestep() behavior to not need to be on ground
#define	FL_SWIM					(1<<11)	// Changes the SV_Movestep() behavior to not need to be on ground (but stay in water)
#define	FL_CONVEYOR				(1<<12)
#define	FL_NPC					(1<<13)
#define	FL_GODMODE				(1<<14)
#define	FL_NOTARGET				(1<<15)
#define	FL_AIMTARGET			(1<<16)	// set if the crosshair needs to aim onto the entity
#define	FL_PARTIALGROUND		(1<<17)	// not all corners are valid
#define FL_STATICPROP			(1<<18)	// Eetsa static prop!		
#define FL_GRAPHED				(1<<19) // worldgraph has this ent listed as something that blocks a connection
#define FL_GRENADE				(1<<20)
#define FL_STEPMOVEMENT			(1<<21)	// Changes the SV_Movestep() behavior to not do any processing
#define FL_DONTTOUCH			(1<<22)	// Doesn't generate touch functions, generates Untouch() for anything it was touching when this flag was set
#define FL_BASEVELOCITY			(1<<23)	// Base velocity has been applied this frame (used to convert base velocity into momentum)
#define FL_WORLDBRUSH			(1<<24)	// Not moveable/removeable brush entity (really part of the world, but represented as an entity for transparency or something)
#define FL_OBJECT				(1<<25) // Terrible name. This is an object that NPCs should see. Missiles, for example.
#define FL_KILLME				(1<<26)	// This entity is marked for death -- will be freed by game DLL
#define FL_ONFIRE				(1<<27)	// You know...
#define FL_DISSOLVING			(1<<28) // We're dissolving!
#define FL_TRANSRAGDOLL			(1<<29) // In the process of turning into a client side ragdoll.
#define FL_UNBLOCKABLE_BY_PLAYER (1<<30) // pusher that can't be blocked by the player
#pragma endregion


typedef enum _D3DSTENCILOP {
	D3DSTENCILOP_KEEP = 1,
	D3DSTENCILOP_ZERO = 2,
	D3DSTENCILOP_REPLACE = 3,
	D3DSTENCILOP_INCRSAT = 4,
	D3DSTENCILOP_DECRSAT = 5,
	D3DSTENCILOP_INVERT = 6,
	D3DSTENCILOP_INCR = 7,
	D3DSTENCILOP_DECR = 8,
	D3DSTENCILOP_FORCE_DWORD = 0x7fffffff, /* force 32-bit size enum */
} D3DSTENCILOP;

typedef enum
{
	STENCILOPERATION_KEEP = 1,
	STENCILOPERATION_ZERO = 2,
	STENCILOPERATION_REPLACE = 3,
	STENCILOPERATION_INCRSAT = 4,
	STENCILOPERATION_DECRSAT = 5,
	STENCILOPERATION_INVERT = 6,
	STENCILOPERATION_INCR = 7,
	STENCILOPERATION_DECR = 8,
	STENCILOPERATION_FORCE_DWORD = 0x7fffffff
} StencilOperation_t;

typedef enum
{
	STENCILCOMPARISONFUNCTION_NEVER = 1,
	STENCILCOMPARISONFUNCTION_LESS = 2,
	STENCILCOMPARISONFUNCTION_EQUAL = 3,
	STENCILCOMPARISONFUNCTION_LESSEQUAL = 4,
	STENCILCOMPARISONFUNCTION_GREATER = 5,
	STENCILCOMPARISONFUNCTION_NOTEQUAL = 6,
	STENCILCOMPARISONFUNCTION_GREATEREQUAL = 7,
	STENCILCOMPARISONFUNCTION_ALWAYS = 8,
	STENCILCOMPARISONFUNCTION_FORCE_DWORD = 0x7fffffff
} StencilComparisonFunction_t;


#pragma region STUDIO

#define STUDIO_NONE						0x00000000
#define STUDIO_RENDER					0x00000001
#define STUDIO_VIEWXFORMATTACHMENTS		0x00000002
#define STUDIO_DRAWTRANSLUCENTSUBMODELS 0x00000004
#define STUDIO_TWOPASS					0x00000008
#define STUDIO_STATIC_LIGHTING			0x00000010
#define STUDIO_WIREFRAME				0x00000020
#define STUDIO_ITEM_BLINK				0x00000040
#define STUDIO_NOSHADOWS				0x00000080
#define STUDIO_WIREFRAME_VCOLLIDE		0x00000100
#define STUDIO_NO_OVERRIDE_FOR_ATTACH	0x00000200

#pragma endregion
